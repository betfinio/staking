import type { BetInterface, Options } from '@/lib/types';
import type { SupabaseClient } from '@supabase/supabase-js';
import type { Address } from 'viem';
import type { Config } from 'wagmi';
export declare const fetchLastBets: (count: number, address: Address, options: Options) => Promise<{
    hash: `0x${string}`;
    address: Address;
    player: Address;
    game: string;
    amount: bigint;
    result: bigint;
    status: bigint;
    created: bigint;
    username?: string;
    customUsername?: string;
}[]>;
export declare function fetchBetInterface(address: Address, member: Address, options: Options): Promise<BetInterface>;
export declare const fetchPlayerBets: (count: number, player: Address, options: Options) => Promise<{
    hash: `0x${string}`;
    address: Address;
    player: Address;
    game: string;
    amount: bigint;
    result: bigint;
    status: bigint;
    created: bigint;
    username?: string;
    customUsername?: string;
}[]>;
export declare function fetchLastStakes(count: number, address: Address, options: Options): Promise<{
    username: string;
    customUsername: any;
    start: number;
    end: number;
    staker: Address;
    pool: Address;
    amount: bigint;
    ended: boolean;
    hash?: Address;
    staking?: string;
    reward?: bigint;
    block?: number;
}[]>;
export declare const fetchMemberSide: (parent: Address, member: Address, supabase: SupabaseClient | undefined) => Promise<"left" | "right" | null>;
export declare const fetchRegistrationDate: (address: Address, config: Config) => Promise<number>;
