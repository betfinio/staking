/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as ConservativeIndexImport } from './routes/conservative/index';
import { Route as DynamicIndexImport } from './routes/dynamic/index';
import { Route as IndexImport } from './routes/index';
import { Route as StakingImport } from './routes/staking';
import { Route as StatisticsIndexImport } from './routes/statistics/index';

// Create/Update Routes

const StakingRoute = StakingImport.update({
	path: '/staking',
	getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
	path: '/',
	getParentRoute: () => rootRoute,
} as any);

const StatisticsIndexRoute = StatisticsIndexImport.update({
	path: '/statistics/',
	getParentRoute: () => rootRoute,
} as any);

const DynamicIndexRoute = DynamicIndexImport.update({
	path: '/dynamic/',
	getParentRoute: () => rootRoute,
} as any);

const ConservativeIndexRoute = ConservativeIndexImport.update({
	path: '/conservative/',
	getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
	interface FileRoutesByPath {
		'/': {
			id: '/';
			path: '/';
			fullPath: '/';
			preLoaderRoute: typeof IndexImport;
			parentRoute: typeof rootRoute;
		};
		'/staking': {
			id: '/staking';
			path: '/staking';
			fullPath: '/staking';
			preLoaderRoute: typeof StakingImport;
			parentRoute: typeof rootRoute;
		};
		'/conservative/': {
			id: '/conservative/';
			path: '/conservative';
			fullPath: '/conservative';
			preLoaderRoute: typeof ConservativeIndexImport;
			parentRoute: typeof rootRoute;
		};
		'/dynamic/': {
			id: '/dynamic/';
			path: '/dynamic';
			fullPath: '/dynamic';
			preLoaderRoute: typeof DynamicIndexImport;
			parentRoute: typeof rootRoute;
		};
		'/statistics/': {
			id: '/statistics/';
			path: '/statistics';
			fullPath: '/statistics';
			preLoaderRoute: typeof StatisticsIndexImport;
			parentRoute: typeof rootRoute;
		};
	}
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
	IndexRoute,
	StakingRoute,
	ConservativeIndexRoute,
	DynamicIndexRoute,
	StatisticsIndexRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/staking",
        "/conservative/",
        "/dynamic/",
        "/statistics/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/staking": {
      "filePath": "staking.tsx"
    },
    "/conservative/": {
      "filePath": "conservative/index.tsx"
    },
    "/dynamic/": {
      "filePath": "dynamic/index.tsx"
    },
    "/statistics/": {
      "filePath": "statistics/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
